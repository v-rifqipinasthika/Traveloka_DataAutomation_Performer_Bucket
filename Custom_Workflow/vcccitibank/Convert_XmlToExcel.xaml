<Activity mc:Ignorable="sap sap2010" x:Class="Convert_XmlToExcel" this:Convert_XmlToExcel.in_pathRawFile="Data\Input\VCAReport_CCDS#6YR_26022024.xml" this:Convert_XmlToExcel.in_pathResultFile="Sample.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Private.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_pathRawFile" Type="InArgument(x:String)" />
    <x:Property Name="in_pathResultFile" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1478.0377358490566,1830.3396226415093</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Convert_XmlToExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Convert_XmlToExcel" sap:VirtualizedContainerService.HintSize="499.92452830188677,1725.2830188679245" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="xml" />
      <Variable x:TypeArguments="sxl:XDocument" Name="desXml" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictItem" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtRaw" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicCurrencyCode" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicTransactionType" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Convert_XmlToExcel" sap:VirtualizedContainerService.HintSize="438.3396226415094,89.66037735849056" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;STEP : Convert_XmlToExcel&quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Custom_Workflow\vcccitibank\Read_CurrencyCode.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="438.3396226415094,111.39622641509433" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Custom_Workflow\vcccitibank\Read_CurrencyCode.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetMasterCurrency">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MasterCurrencyCode&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetId">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SheetIdConfig_Treasury&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dicCurrencyCode">
          <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dicCurrencyCode" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pathSaKey">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;PathSaKey&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read_TransactionType.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="438.3396226415094,111.39622641509433" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Custom_Workflow\vcccitibank\Read_TransactionType.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetMasterCurrency">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MasterTransactionType&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetId">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SheetIdConfig_Treasury&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dicTransactionType">
          <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dicTransactionType" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pathSaKey">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;PathSaKey&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ReadTextFile File="{x:Null}" Content="[xml]" DisplayName="Read Text File XML File" FileName="[in_pathRawFile]" sap:VirtualizedContainerService.HintSize="438.3396226415094,78.79245283018868" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:DeserializeXml DisplayName="Deserialize XML" sap:VirtualizedContainerService.HintSize="438.3396226415094,59.77358490566037" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[desXML]" XMLString="[xml]" />
    <TryCatch DisplayName="Try Catch Create Table Structure" sap:VirtualizedContainerService.HintSize="438.3396226415094,384.90566037735846" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Create a new DataTable&#xA;DataTable dataTable = new DataTable();&#xA;&#xA;// Add columns to the DataTable&#xA;dataTable.Columns.Add(&quot;Hierarchy Level 1 Number&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Hierarchy Name (Level 1)&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Account Number&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Virtual Card Number&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Virtual Card Number (Short)&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction Date&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction Time&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction Post Date&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Authorization ID&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Merchant Reference Number&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction ID&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;MCC&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Merchant Description&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Original Currency&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Original Amount&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Billing Currency&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Billing Amount&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction Type&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Transaction Code&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Label 01&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Data 01&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Label 02&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Data 02&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Label 03&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Data 03&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Label 04&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Project&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;Label 05&quot;, typeof(string));&#xA;dataTable.Columns.Add(&quot;PIC&quot;, typeof(string));&#xA;&#xA;//Assigning out_dtRaw with formatted structure&#xA;dtRaw = dataTable.Clone();&#xA;dtRaw = dataTable;" DisplayName="Invoke Code Table Structure" sap:VirtualizedContainerService.HintSize="334.18867924528297,164.83018867924528" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtRaw">[dtRaw]</InOutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.92452830188677,19.92452830188679" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw inner exception" Exception="[exception.InnerException]" sap:VirtualizedContainerService.HintSize="334.18867924528297,87.84905660377358" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438.3396226415094,384.90566037735846" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="//Loop xml and extract values&#xD;&#xA;String corporationNumber = &quot;&quot;;&#xD;&#xA;String nameLine = &quot;&quot;;&#xD;&#xA;String billingCurrencyCode = &quot;&quot;;&#xD;&#xA;String originalCurrencyCode = &quot;&quot;;&#xD;&#xA;String alternateAccountNumber = &quot;&quot;;&#xD;&#xA;String processorTransactionId = &quot;&quot;;&#xD;&#xA;String transactionDate = &quot;&quot;;&#xD;&#xA;String postingDate = &quot;&quot;;&#xD;&#xA;String acquirerReferenceData = &quot;&quot;;&#xD;&#xA;String cardAcceptorBusinessCode = &quot;&quot;;&#xD;&#xA;String cardAcceptorName = &quot;&quot;;&#xD;&#xA;String amountInOriginalCurrency = &quot;&quot;;&#xD;&#xA;String amountInPostedCurrency = &quot;&quot;;&#xD;&#xA;String issuerTransactionCode = &quot;&quot;;&#xD;&#xA;String customIdentfier = &quot;&quot;;&#xD;&#xA;Int32 countData = 0;&#xD;&#xA;String transactionType = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;//AccountEntity&#xD;&#xA;foreach (XElement currentItem in desXml.Elements(&quot;CDFTransmissionFile&quot;).Elements(&quot;IssuerEntity&quot;).Descendants(&quot;CorporateEntity&quot;))&#xD;&#xA;{&#xD;&#xA;&#x9;//Reset value to assign empty value&#xD;&#xA;&#x9;corporationNumber = &quot;&quot;;&#xD;&#xA;&#x9;nameLine = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;//Loop through FinancialTransactionEntity&#xD;&#xA;&#x9;if (currentItem.Descendants(&quot;FinancialTransactionEntity&quot;).Any())&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;//CorporationNumber/OrganizationPointNumber/ReportsTo&#xD;&#xA;&#x9;&#x9;corporationNumber = currentItem.Attribute(&quot;CorporationNumber&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//NameLine&#xD;&#xA;&#x9;&#x9;nameLine = currentItem.Element(&quot;CorporateInformation_4000&quot;).Element(&quot;NameLine1&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;foreach (XElement currentFinancialTransaction in currentItem.Descendants(&quot;FinancialTransactionEntity&quot;))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;//Reset value to assign empty value&#xD;&#xA;&#x9;&#x9;&#x9;billingCurrencyCode = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;originalCurrencyCode = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;alternateAccountNumber = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;processorTransactionId = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;transactionDate = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;postingDate = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;acquirerReferenceData = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;cardAcceptorBusinessCode = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;cardAcceptorName = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;amountInOriginalCurrency = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;amountInPostedCurrency = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;issuerTransactionCode = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;customIdentfier = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;transactionType = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;countData = countData + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;alternateAccountNumber = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AlternateAccount&quot;).Element(&quot;AlternateAccountNumber&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;customIdentfier = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;CustomIdentifier&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;transactionDate = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;TransactionDate&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;postingDate =currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;PostingDate&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;processorTransactionId = currentFinancialTransaction.Attribute(&quot;ProcessorTransactionId&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;acquirerReferenceData =currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AcquirerReferenceData&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;cardAcceptorBusinessCode = currentFinancialTransaction.Element(&quot;CardAcceptor_5001&quot;).Element(&quot;CardAcceptorBusinessCode&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;cardAcceptorName = currentFinancialTransaction.Element(&quot;CardAcceptor_5001&quot;).Element(&quot;CardAcceptorName&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;amountInOriginalCurrency = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInOriginalCurrency&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;String comaPositionOriginalCurrency = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInOriginalCurrency&quot;).Attribute(&quot;CurrencyExponent&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Parse amount into BigInteger, format with decimal point, and convert back to string&#xD;&#xA;&#x9;        BigInteger amountBigIntOriginalCurrency = BigInteger.Parse(amountInOriginalCurrency);&#xD;&#xA;&#x9;        string amountStringOriginalCurrency = amountBigIntOriginalCurrency.ToString();&#xD;&#xA;&#x9;        amountInOriginalCurrency = amountStringOriginalCurrency.Insert(amountStringOriginalCurrency.Length - int.Parse(comaPositionOriginalCurrency), &quot;.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;originalCurrencyCode = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInOriginalCurrency&quot;).Attribute(&quot;CurrencyCode&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;amountInPostedCurrency = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInPostedCurrency&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;String comaPositionPostedCurrency = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInPostedCurrency&quot;).Attribute(&quot;CurrencyExponent&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Parse amount into BigInteger, format with decimal point, and convert back to string&#xD;&#xA;&#x9;        BigInteger amountBigIntPostedCurrency = BigInteger.Parse(amountInPostedCurrency);&#xD;&#xA;&#x9;        string amountStringPostedCurrency = amountBigIntPostedCurrency.ToString();&#xD;&#xA;&#x9;        amountInPostedCurrency = amountStringPostedCurrency.Insert(amountStringPostedCurrency.Length - int.Parse(comaPositionPostedCurrency), &quot;.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;billingCurrencyCode = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;AmountInPostedCurrency&quot;).Attribute(&quot;CurrencyCode&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;issuerTransactionCode = currentFinancialTransaction.Element(&quot;FinancialTransaction_5000&quot;).Element(&quot;IssuerTransactionCode&quot;).Value;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;//Add to datatable&#xD;&#xA;&#x9;&#x9;&#x9;DataRow row = dtRaw.NewRow();&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Hierarchy Level 1 Number&quot;] = corporationNumber;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Hierarchy Name (Level 1)&quot;] = nameLine;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Account Number&quot;] = alternateAccountNumber;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Virtual Card Number&quot;] = customIdentfier;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Virtual Card Number (Short)&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Transaction Date&quot;] = transactionDate;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Transaction Time&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Transaction Post Date&quot;] = postingDate;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Authorization ID&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Merchant Reference Number&quot;] = processorTransactionId;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Transaction ID&quot;] = acquirerReferenceData;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;MCC&quot;] = cardAcceptorBusinessCode;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Merchant Description&quot;] = cardAcceptorName;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;try&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Original Currency&quot;] = dicCurrencyCode[originalCurrencyCode];&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;catch (Exception e)&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(e.Message);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Original Currency&quot;] = originalCurrencyCode;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Original Amount&quot;] = amountInOriginalCurrency;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;try&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Billing Currency&quot;] = dicCurrencyCode[billingCurrencyCode];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;catch (Exception e)&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(e.Message);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Billing Currency&quot;] = billingCurrencyCode;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Billing Amount&quot;] = amountInPostedCurrency;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;try&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Transaction Type&quot;] = dicTransactionType[issuerTransactionCode];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;catch (Exception e)&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row[&quot;Transaction Type&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Transaction Code&quot;] = issuerTransactionCode;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Label 01&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Data 01&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Label 02&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Data 02&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Label 03&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Data 03&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Label 04&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Project&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;Label 05&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;row[&quot;PIC&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Add the row to the DataTable&#xD;&#xA;&#x9;&#x9;&#x9;dtRaw.Rows.Add(row);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Console.WriteLine(countData.ToString());" DisplayName="Invoke Code Get XML Value" sap:VirtualizedContainerService.HintSize="334.18867924528297,164.83018867924528" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="sxl:XDocument" x:Key="desXml">[desXML]</InArgument>
            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtRaw">[dtRaw]</InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="dicCurrencyCode">[dicCurrencyCode]</InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="dicTransactionType">[dicTransactionType]</InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.92452830188677,19.92452830188679" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw inner exception" Exception="[exception.InnerException]" sap:VirtualizedContainerService.HintSize="334.18867924528297,87.84905660377358" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtRaw]" DisplayName="Write Range Workbook | Result file" sap:VirtualizedContainerService.HintSize="438.3396226415094,115.92452830188678" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[in_pathResultFile]" />
  </Sequence>
</Activity>